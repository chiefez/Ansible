---
  - name: main components
    hosts: all
    become: yes
    gather_facts: false
    tasks:
      - name: update cache
        ansible.builtin.apt:
          update_cache: yes

      - name: install apt-transport-https
        ansible.builtin.apt:
          name: apt-transport-https
          state: present

      - name: install java
        ansible.builtin.apt:
          name: default-jdk
          state: present

  - name: Install Elasticsearch
    hosts: all
    gather_facts: false
    become: yes
    tasks:

      - name: add gpg key
        ansible.builtin.apt_key:
          url: https://artifacts.elastic.co/GPG-KEY-elasticsearch

      - name: add elasticsearch repo
        ansible.builtin.apt_repository:
          repo: deb https://artifacts.elastic.co/packages/8.x/apt stable main
          state: present 

      - name: install elasticsearch
        ansible.builtin.apt:
          name: elasticsearch
          state: latest

      - name: enable and start
        ansible.builtin.systemd:
          name: elasticsearch
          enabled: yes
          state: started

  - name: Install Kibana
    hosts: all
    become: yes
    tasks:
      - name: Install kibana
        ansible.builtin.apt:
          name: kibana
          state: present
          
      - name: edit conf file
        ansible.builtin.lineinfile:
          path: /etc/kibana/kibana.yml
          regexp: "^server.host"
          line: "server.host: {{ ansible_all_ipv4_addresses | first}}"


      - name: enable and restart
        ansible.builtin.systemd:
          name: kibana
          enabled: yes
          state: restarted 


  - name: Install and configure Logstash
    hosts: all
    gather_facts: false
    become: yes
    vars:
      
      logstashDir: "/etc/logstash/conf.d/"

    tasks:
      - name: install logstash
        ansible.builtin.apt:
          name: logstash
          state: present

      - name: configure input.conf
        ansible.builtin.blockinfile:
          path: "{{ logstashDir }}/input.conf"
          create: yes 
          block: |
            input {
              beats {
                port => 5044
             }
            }

      - name: configure filter.conf
        ansible.builtin.blockinfile:
          path: "{{ logstashDir }}/filter.conf"
          create: yes
          block: |
           filter {
              if [type] == "syslog" {
                grok {
                  match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
                 add_field1 => [ "received_at", "%{@timestamp}" ]
                 add_field => [ "received_from", "%{host}" ]
                 }
                  date {
                    match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
                  }
                }
              }

      - name: configure output.conf
        ansible.builtin.blockinfile:
          path: "{{ logstashDir }}/output.conf"
          create: yes
          block: |
            output {
              elasticsearch {
              hosts => ["https://localhost:9200"]
              ssl => true
              ssl_certificate_verification => false
              manage_template => false
              index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
              user => elastic
              password => "1234"
              }
            } 

      - name: enable and restart logstash
        ansible.builtin.systemd:
          name: logstash
          enabled: yes
          state: restarted 

  - name: Install Zabbix
    hosts: all
    gather_facts: false
    become: yes
    tasks:

      - name: add repo for zabbix
        ansible.builtin.apt:
          deb: https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_7.0-2+ubuntu24.04_all.deb
          state: present

      - name: install zabbix-agent
        ansible.builtin.apt:
          update_cache: yes
          name: zabbix-agent
          state: present

      - name: enable and restart zabbix-agent
        ansible.builtin.systemd:
          name: zabbix-agent
          enabled: yes
          state: restarted
